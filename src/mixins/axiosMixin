export default {
    methods: {
    
    //Clear filter...
    filterReset(){
        this.table = []
        this.filter = null;
        this.top = null;
        this.genre = null;
        this.search = null;
        this.page = 1;
    },

    //... make a new one and launch function show
    filterSearch(search) {
        this.filterReset();
        this.search = search;
        this.filter = "search";
        this.show(this.filter, this.type, this.search, this.page);
      },
  
      // same^^
      filterGenre(index) {
        this.filterReset();
        this.genre = index + 1;
        this.filter = "genre";
        this.show(this.filter, this.type, this.genre, this.page);
      },
  
      // same^^
      filterTop(item) {
        this.filterReset();
        this.top = item.url;
        this.filter = "top";
        this.show(this.filter, this.type, this.page, this.top);
      },

        async show(filter, type, i, page) {
            try {
                //Create API url
                let url = "https://api.jikan.moe/v3/" + filter + "/" + type
                if (filter === 'top' || filter === 'genre') {
                    
                    url += "/" + i + "/" + page
                }
                else if (filter === 'search') {
                    url += "?q=" + i + "&page=" + page
                }
                //Connect to API
                const axios = require('axios')
                //Wait the response and pass the url
                const result = await axios.get(url)

                //Pass result from API into table
                if (filter === 'genre') {
                    this.table = result.data[type]
                } else if (filter === 'search') {
                    this.table = result.data.results
                }
                else {
                    this.table = result.data[filter]
                }
                console.log("Data fetched and displayed on page");

            } catch (e) {
                console.error(e)
            }
        },
    }
}

                /*    WORK IN PROGRESS
                let resultPretty = []
                if (result.status !== 200) throw new Error("Data not found")
                   result.anime.map((anime) => {
                       let objectToPush = {
                           Title: anime.title,
                           description: anime.synopsys || null,
                           image: anime.image_url
                       }
       
                       resultPretty.push(objectToPush)
                   }) */